"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/books/[book]/chapters/route";
exports.ids = ["app/api/books/[book]/chapters/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "node:fs/promises":
/*!***********************************!*\
  !*** external "node:fs/promises" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:fs/promises");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute&page=%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute.ts&appDir=%2FUsers%2Fanthonymiller%2Fworkspaces%2Fnext_book_reader%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fanthonymiller%2Fworkspaces%2Fnext_book_reader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute&page=%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute.ts&appDir=%2FUsers%2Fanthonymiller%2Fworkspaces%2Fnext_book_reader%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fanthonymiller%2Fworkspaces%2Fnext_book_reader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_anthonymiller_workspaces_next_book_reader_app_api_books_book_chapters_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/books/[book]/chapters/route.ts */ \"(rsc)/./app/api/books/[book]/chapters/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/books/[book]/chapters/route\",\n        pathname: \"/api/books/[book]/chapters\",\n        filename: \"route\",\n        bundlePath: \"app/api/books/[book]/chapters/route\"\n    },\n    resolvedPagePath: \"/Users/anthonymiller/workspaces/next_book_reader/app/api/books/[book]/chapters/route.ts\",\n    nextConfigOutput,\n    userland: _Users_anthonymiller_workspaces_next_book_reader_app_api_books_book_chapters_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/books/[book]/chapters/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZib29rcyUyRiU1QmJvb2slNUQlMkZjaGFwdGVycyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYm9va3MlMkYlNUJib29rJTVEJTJGY2hhcHRlcnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZib29rcyUyRiU1QmJvb2slNUQlMkZjaGFwdGVycyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFudGhvbnltaWxsZXIlMkZ3b3Jrc3BhY2VzJTJGbmV4dF9ib29rX3JlYWRlciUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZhbnRob255bWlsbGVyJTJGd29ya3NwYWNlcyUyRm5leHRfYm9va19yZWFkZXImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3VDO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGRmLXR0cy1uZXh0Lz9iMmE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9hbnRob255bWlsbGVyL3dvcmtzcGFjZXMvbmV4dF9ib29rX3JlYWRlci9hcHAvYXBpL2Jvb2tzL1tib29rXS9jaGFwdGVycy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYm9va3MvW2Jvb2tdL2NoYXB0ZXJzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYm9va3MvW2Jvb2tdL2NoYXB0ZXJzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9ib29rcy9bYm9va10vY2hhcHRlcnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYW50aG9ueW1pbGxlci93b3Jrc3BhY2VzL25leHRfYm9va19yZWFkZXIvYXBwL2FwaS9ib29rcy9bYm9va10vY2hhcHRlcnMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2Jvb2tzL1tib29rXS9jaGFwdGVycy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute&page=%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute.ts&appDir=%2FUsers%2Fanthonymiller%2Fworkspaces%2Fnext_book_reader%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fanthonymiller%2Fworkspaces%2Fnext_book_reader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/books/[book]/chapters/route.ts":
/*!************************************************!*\
  !*** ./app/api/books/[book]/chapters/route.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_pdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/pdf */ \"(rsc)/./lib/pdf.ts\");\n\n\nasync function GET(_req, { params }) {\n    console.log(`API: Fetching chapters for book: ${params.book}`);\n    try {\n        console.log(`API: Calling extractChapters for ${params.book}`);\n        const chapters = await (0,_lib_pdf__WEBPACK_IMPORTED_MODULE_1__.extractChapters)(params.book);\n        console.log(`API: Found ${chapters.length} chapters`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            chapters\n        });\n    } catch (error) {\n        console.error(\"Error extracting chapters:\", error);\n        // Include more detailed error information in the response\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            chapters: [],\n            error: \"Failed to extract chapters\",\n            details: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2Jvb2tzL1tib29rXS9jaGFwdGVycy9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDQztBQUVyQyxlQUFlRSxJQUNwQkMsSUFBYSxFQUNiLEVBQUVDLE1BQU0sRUFBZ0M7SUFFeENDLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLGlDQUFpQyxFQUFFRixPQUFPRyxJQUFJLENBQUMsQ0FBQztJQUM3RCxJQUFJO1FBQ0ZGLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLGlDQUFpQyxFQUFFRixPQUFPRyxJQUFJLENBQUMsQ0FBQztRQUM3RCxNQUFNQyxXQUFXLE1BQU1QLHlEQUFlQSxDQUFDRyxPQUFPRyxJQUFJO1FBQ2xERixRQUFRQyxHQUFHLENBQUMsQ0FBQyxXQUFXLEVBQUVFLFNBQVNDLE1BQU0sQ0FBQyxTQUFTLENBQUM7UUFDcEQsT0FBT1QscURBQVlBLENBQUNVLElBQUksQ0FBQztZQUFFRjtRQUFTO0lBQ3RDLEVBQUUsT0FBT0csT0FBTztRQUNkTixRQUFRTSxLQUFLLENBQUMsOEJBQThCQTtRQUM1QywwREFBMEQ7UUFDMUQsTUFBTUMsZUFBZUQsaUJBQWlCRSxRQUFRRixNQUFNRyxPQUFPLEdBQUdDLE9BQU9KO1FBQ3JFLE9BQU9YLHFEQUFZQSxDQUFDVSxJQUFJLENBQUM7WUFDdkJGLFVBQVUsRUFBRTtZQUNaRyxPQUFPO1lBQ1BLLFNBQVNKO1FBQ1gsR0FBRztZQUFFSyxRQUFRO1FBQUk7SUFDbkI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3BkZi10dHMtbmV4dC8uL2FwcC9hcGkvYm9va3MvW2Jvb2tdL2NoYXB0ZXJzL3JvdXRlLnRzPzA1YWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgeyBleHRyYWN0Q2hhcHRlcnMgfSBmcm9tIFwiQC9saWIvcGRmXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoXG4gIF9yZXE6IFJlcXVlc3QsXG4gIHsgcGFyYW1zIH06IHsgcGFyYW1zOiB7IGJvb2s6IHN0cmluZyB9IH1cbikge1xuICBjb25zb2xlLmxvZyhgQVBJOiBGZXRjaGluZyBjaGFwdGVycyBmb3IgYm9vazogJHtwYXJhbXMuYm9va31gKTtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZyhgQVBJOiBDYWxsaW5nIGV4dHJhY3RDaGFwdGVycyBmb3IgJHtwYXJhbXMuYm9va31gKTtcbiAgICBjb25zdCBjaGFwdGVycyA9IGF3YWl0IGV4dHJhY3RDaGFwdGVycyhwYXJhbXMuYm9vayk7XG4gICAgY29uc29sZS5sb2coYEFQSTogRm91bmQgJHtjaGFwdGVycy5sZW5ndGh9IGNoYXB0ZXJzYCk7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgY2hhcHRlcnMgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGV4dHJhY3RpbmcgY2hhcHRlcnM6XCIsIGVycm9yKTtcbiAgICAvLyBJbmNsdWRlIG1vcmUgZGV0YWlsZWQgZXJyb3IgaW5mb3JtYXRpb24gaW4gdGhlIHJlc3BvbnNlXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBTdHJpbmcoZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IFxuICAgICAgY2hhcHRlcnM6IFtdLCBcbiAgICAgIGVycm9yOiBcIkZhaWxlZCB0byBleHRyYWN0IGNoYXB0ZXJzXCIsIFxuICAgICAgZGV0YWlsczogZXJyb3JNZXNzYWdlIFxuICAgIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJleHRyYWN0Q2hhcHRlcnMiLCJHRVQiLCJfcmVxIiwicGFyYW1zIiwiY29uc29sZSIsImxvZyIsImJvb2siLCJjaGFwdGVycyIsImxlbmd0aCIsImpzb24iLCJlcnJvciIsImVycm9yTWVzc2FnZSIsIkVycm9yIiwibWVzc2FnZSIsIlN0cmluZyIsImRldGFpbHMiLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/books/[book]/chapters/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/pdf.ts":
/*!********************!*\
  !*** ./lib/pdf.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PDF_DIR: () => (/* binding */ PDF_DIR),\n/* harmony export */   extractChapters: () => (/* binding */ extractChapters),\n/* harmony export */   extractTextForRange: () => (/* binding */ extractTextForRange),\n/* harmony export */   listBooks: () => (/* binding */ listBooks)\n/* harmony export */ });\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:path */ \"node:path\");\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:fs/promises */ \"node:fs/promises\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(node_fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var pdfjs_dist_legacy_build_pdf_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdfjs-dist/legacy/build/pdf.mjs */ \"(rsc)/./node_modules/pdfjs-dist/legacy/build/pdf.mjs\");\n\n\n// Use legacy build for Node.js environment\n\n// Configure PDF.js for Node environment\n// Try to use a path-based approach for the worker\nconst workerPath = node_path__WEBPACK_IMPORTED_MODULE_0___default().join(process.cwd(), \"node_modules\", \"pdfjs-dist\", \"build\", \"pdf.worker.mjs\");\npdfjs_dist_legacy_build_pdf_mjs__WEBPACK_IMPORTED_MODULE_2__.GlobalWorkerOptions.workerSrc = workerPath;\n// Use path.resolve to ensure we get an absolute path\nconst PDF_DIR = node_path__WEBPACK_IMPORTED_MODULE_0___default().resolve(process.cwd(), \"public\", \"pdfs\");\n// Text cleaning and formatting function\nfunction cleanAndFormatText(rawText) {\n    // Split text into lines for processing\n    const lines = rawText.split(\"\\n\");\n    const blocks = [];\n    let currentBlock = null;\n    // Process each line\n    for(let i = 0; i < lines.length; i++){\n        const line = lines[i].trim();\n        // Skip empty lines and page numbers/headers\n        if (!line || isPageNumber(line) || isPageHeader(line)) {\n            continue;\n        }\n        // Detect block type\n        if (isChapterHeading(line)) {\n            if (currentBlock) blocks.push(currentBlock);\n            currentBlock = {\n                type: \"heading\",\n                content: formatHeading(line)\n            };\n            blocks.push(currentBlock);\n            currentBlock = null;\n        } else if (isBulletPoint(line)) {\n            if (currentBlock?.type !== \"list\") {\n                if (currentBlock) blocks.push(currentBlock);\n                currentBlock = {\n                    type: \"list\",\n                    content: formatListItem(line)\n                };\n            } else {\n                currentBlock.content += \"\\n\" + formatListItem(line);\n            }\n        } else if (isQuote(line)) {\n            if (currentBlock) blocks.push(currentBlock);\n            currentBlock = {\n                type: \"quote\",\n                content: formatQuote(line)\n            };\n            blocks.push(currentBlock);\n            currentBlock = null;\n        } else if (isSidebar(line)) {\n            if (currentBlock) blocks.push(currentBlock);\n            currentBlock = {\n                type: \"sidebar\",\n                content: formatSidebar(line, lines, i)\n            };\n            // Skip the lines that were included in the sidebar\n            i += countSidebarLines(lines, i);\n            blocks.push(currentBlock);\n            currentBlock = null;\n        } else {\n            // Regular paragraph text\n            if (!currentBlock || currentBlock.type !== \"paragraph\") {\n                if (currentBlock) blocks.push(currentBlock);\n                currentBlock = {\n                    type: \"paragraph\",\n                    content: formatParagraph(line)\n                };\n            } else {\n                // If this line looks like it continues the paragraph, append it\n                if (shouldAppendToParagraph(line, currentBlock.content)) {\n                    currentBlock.content += \" \" + formatParagraph(line);\n                } else {\n                    blocks.push(currentBlock);\n                    currentBlock = {\n                        type: \"paragraph\",\n                        content: formatParagraph(line)\n                    };\n                }\n            }\n        }\n    }\n    // Add the last block if there is one\n    if (currentBlock) blocks.push(currentBlock);\n    // Convert blocks to formatted text\n    return blocks.map((block)=>{\n        switch(block.type){\n            case \"heading\":\n                return block.content;\n            case \"list\":\n                return block.content;\n            case \"quote\":\n                return \"> \" + block.content;\n            case \"sidebar\":\n                return \"---\\n\" + block.content + \"\\n---\";\n            case \"paragraph\":\n            default:\n                return block.content;\n        }\n    }).join(\"\\n\\n\");\n}\n// Helper functions\nfunction isPageNumber(line) {\n    return /^\\d+$/.test(line.trim());\n}\nfunction isPageHeader(line) {\n    return /^(Entrepreneurship Bootcamp|Defy Ventures)/i.test(line.trim());\n}\nfunction isChapterHeading(line) {\n    return /^Chapter\\s+\\d+/i.test(line.trim()) || /^[A-Z][A-Z\\s]{10,}/.test(line.trim());\n}\nfunction isBulletPoint(line) {\n    return /^[•·▪▫◦‣⁃]\\s/.test(line.trim());\n}\nfunction isQuote(line) {\n    return /^[\"\"]/.test(line.trim()) || /^z\\s/.test(line.trim());\n}\nfunction isSidebar(line) {\n    return /^(Note:|Tip:|Important:)/.test(line.trim());\n}\nfunction formatHeading(line) {\n    const level = getHeadingLevel(line);\n    const text = line.replace(/^Chapter\\s+(\\d+):\\s*/i, \"Chapter $1: \").replace(/\\s+/g, \" \").trim();\n    return \"#\".repeat(level) + \" \" + text;\n}\nfunction getHeadingLevel(line) {\n    if (/^Chapter\\s+\\d+/i.test(line)) return 1;\n    if (/^Section/i.test(line)) return 2;\n    if (/^\\d+\\./i.test(line)) return 3;\n    return 2; // Default for other headings\n}\nfunction formatListItem(line) {\n    return \"• \" + line.replace(/^[•·▪▫◦‣⁃]\\s*/, \"\").trim();\n}\nfunction formatQuote(line) {\n    return line.replace(/^[\"\"]/, \"\").replace(/^z\\s/, \"\").trim();\n}\nfunction formatSidebar(line, lines, currentIndex) {\n    // Extract the sidebar content\n    let content = line.trim();\n    let i = currentIndex + 1;\n    while(i < lines.length && !isEmptyOrSeparator(lines[i])){\n        content += \"\\n\" + lines[i].trim();\n        i++;\n    }\n    return content;\n}\nfunction countSidebarLines(lines, startIndex) {\n    let count = 0;\n    let i = startIndex + 1;\n    while(i < lines.length && !isEmptyOrSeparator(lines[i])){\n        count++;\n        i++;\n    }\n    return count;\n}\nfunction isEmptyOrSeparator(line) {\n    return !line.trim() || /^-{3,}$/.test(line.trim());\n}\nfunction formatParagraph(line) {\n    return line.replace(/\\s+/g, \" \").trim();\n}\nfunction shouldAppendToParagraph(line, currentContent) {\n    // Check if this line looks like it continues the paragraph\n    // For example, if it doesn't start with a capital letter, it might be a continuation\n    return !isChapterHeading(line) && !isBulletPoint(line) && !isQuote(line) && !isSidebar(line) && !/^[A-Z]/.test(line.trim()) && currentContent.length > 0;\n}\nasync function listBooks() {\n    try {\n        console.log(`Reading directory: ${PDF_DIR}`);\n        // First check if the directory exists\n        try {\n            await node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default().access(PDF_DIR);\n        } catch (err) {\n            console.error(`Directory ${PDF_DIR} does not exist or is not accessible`);\n            // Create the directory if it doesn't exist\n            await node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default().mkdir(PDF_DIR, {\n                recursive: true\n            });\n            return []; // Return empty array since we just created the directory\n        }\n        // Read all files in the directory\n        const files = await node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default().readdir(PDF_DIR);\n        // Filter for PDF files\n        const pdfFiles = [];\n        for (const file of files){\n            try {\n                const stat = await node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default().stat(node_path__WEBPACK_IMPORTED_MODULE_0___default().join(PDF_DIR, file));\n                if (stat.isFile() && file.toLowerCase().endsWith(\".pdf\")) {\n                    pdfFiles.push(file);\n                }\n            } catch (err) {\n                console.error(`Error checking file ${file}:`, err);\n            // Continue with other files\n            }\n        }\n        console.log(`Found ${pdfFiles.length} PDF files`);\n        return pdfFiles;\n    } catch (error) {\n        console.error(`Error reading directory ${PDF_DIR}:`, error);\n        throw error;\n    }\n}\nconst CHAPTER_PATTERNS = [\n    /^\\s*chapter\\s+\\d+\\s*:/i,\n    /^\\s*chapter\\s+\\d+\\s*[a-zA-Z]/i,\n    /^\\s*chapter\\s+[ivxlcdm]+\\s*:/i,\n    /^\\s*chapter\\s+[ivxlcdm]+\\s*[a-zA-Z]/i,\n    /^\\s*ch\\.\\s*\\d+\\s*:/i,\n    /^\\s*ch\\.\\s*\\d+\\s*[a-zA-Z]/i,\n    /^\\s*book\\s+\\d+\\s*:/i,\n    /^\\s*book\\s+\\d+\\s*[a-zA-Z]/i,\n    /^\\s*part\\s+\\d+\\s*:/i,\n    /^\\s*part\\s+\\d+\\s*[a-zA-Z]/i\n];\nfunction looksLikeChapterHeading(line) {\n    const s = line.trim();\n    if (s.length === 0 || s.length > 80) return false;\n    // Must start with \"Chapter\" or similar\n    if (!/^(chapter|ch\\.|book|part)\\s+/i.test(s)) return false;\n    // Must contain a number or roman numeral\n    if (!/\\d+|[ivxlcdm]+/i.test(s)) return false;\n    // Must have some descriptive text after the number\n    const parts = s.split(/\\s+/);\n    if (parts.length < 3) return false;\n    // Check if there's meaningful text after the chapter identifier\n    const meaningfulText = parts.slice(2).join(\" \");\n    if (meaningfulText.length < 3) return false;\n    // Exclude appendix sections, rubrics, etc.\n    if (/rubric|appendix|case study|promise cards/i.test(meaningfulText)) return false;\n    return true;\n}\nfunction looksLikeAllCapsHeading(line) {\n    const s = line.trim();\n    if (s.length === 0 || s.length > 60) return false;\n    // Must be reasonably long to be a heading\n    if (s.length < 10) return false;\n    const letters = s.replace(/[^A-Za-z]/g, \"\");\n    if (letters.length < 5) return false; // Require more letters\n    // Must be all caps\n    if (s !== s.toUpperCase()) return false;\n    // Must not be just repeated characters or very short words\n    const words = s.split(/\\s+/);\n    if (words.length < 2) return false;\n    // Check if it looks like a meaningful heading (not just random caps)\n    const hasMeaningfulWords = words.some((word)=>word.length > 2);\n    if (!hasMeaningfulWords) return false;\n    // Exclude appendix sections, rubrics, etc.\n    if (/rubric|appendix|case study|promise cards/i.test(s)) return false;\n    return true;\n}\nasync function extractChapters(bookFileName) {\n    console.log(`Extracting chapters from ${bookFileName}`);\n    const filePath = node_path__WEBPACK_IMPORTED_MODULE_0___default().resolve(PDF_DIR, bookFileName);\n    console.log(`Full path: ${filePath}`);\n    try {\n        // Check if file exists\n        await node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default().access(filePath);\n        console.log(`File exists: ${filePath}`);\n    } catch (err) {\n        console.error(`File does not exist: ${filePath}`);\n        throw new Error(`PDF file not found: ${bookFileName}`);\n    }\n    console.log(`Reading file: ${filePath}`);\n    const buffer = await node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default().readFile(filePath);\n    console.log(`File size: ${buffer.length} bytes`);\n    const data = new Uint8Array(buffer);\n    console.log(`Creating PDF.js document`);\n    const loadingTask = pdfjs_dist_legacy_build_pdf_mjs__WEBPACK_IMPORTED_MODULE_2__.getDocument({\n        data,\n        disableWorker: true\n    });\n    console.log(`Waiting for PDF to load`);\n    const pdf = await loadingTask.promise;\n    const numPages = pdf.numPages;\n    console.log(`PDF loaded with ${numPages} pages`);\n    const hits = [];\n    // Scan first ~50 lines per page for heading candidates\n    console.log(`Starting to scan ${numPages} pages for chapter headings`);\n    for(let i = 1; i <= numPages; i++){\n        try {\n            console.log(`Processing page ${i}/${numPages}`);\n            const page = await pdf.getPage(i);\n            console.log(`Getting text content for page ${i}`);\n            const tc = await page.getTextContent();\n            // Join into lines\n            const items = tc.items;\n            const raw = items.map((it)=>it.str).join(\"\\n\");\n            const lines = raw.split(/\\r?\\n/).map((l)=>l.trim()).filter(Boolean).slice(0, 60);\n            console.log(`Found ${lines.length} lines of text on page ${i}`);\n            const found = lines.find((ln)=>CHAPTER_PATTERNS.some((re)=>re.test(ln)) || looksLikeChapterHeading(ln) || looksLikeAllCapsHeading(ln));\n            if (found) {\n                console.log(`Found chapter heading on page ${i}: \"${found}\"`);\n                hits.push({\n                    page: i,\n                    title: found.replace(/\\s+/g, \" \").trim()\n                });\n            }\n        } catch (err) {\n            console.error(`Error processing page ${i}:`, err);\n        // Continue with next page\n        }\n    }\n    console.log(`Finished scanning pages, found ${hits.length} potential chapter headings`);\n    let chapters = [];\n    if (hits.length === 0) {\n        chapters = [\n            {\n                id: 1,\n                title: \"Full Document\",\n                startPage: 1,\n                endPage: numPages\n            }\n        ];\n    } else {\n        // Dedup similar headings and build ranges\n        const uniq = [];\n        for(let i = 0; i < hits.length; i++){\n            const current = hits[i];\n            const prev = uniq[uniq.length - 1];\n            // Skip if this is the same heading on a different page\n            if (prev && current.title.toLowerCase() === prev.title.toLowerCase()) {\n                continue;\n            }\n            // Skip if this is just a continuation of the same chapter\n            if (prev && current.page - prev.page < 3) {\n                continue;\n            }\n            uniq.push(current);\n        }\n        console.log(`After deduplication, found ${uniq.length} unique chapter headings`);\n        // Build chapter ranges\n        for(let i = 0; i < uniq.length; i++){\n            const start = uniq[i].page;\n            const end = i + 1 < uniq.length ? uniq[i + 1].page - 1 : numPages;\n            let title = uniq[i].title;\n            // Normalize chapter titles\n            if (/^\\s*chapter\\b/i.test(title)) {\n                title = title.replace(/^\\s*chapter\\s*/i, \"\").replace(/\\s+/g, \" \").trim();\n                title = `Chapter ${title}`;\n            }\n            chapters.push({\n                id: i + 1,\n                title,\n                startPage: start,\n                endPage: end\n            });\n        }\n        // Post-process: filter to only main numbered chapters (1-22) and merge duplicates\n        const chapterMap = new Map();\n        chapters.forEach((ch)=>{\n            const chapterMatch = ch.title.match(/^Chapter\\s+(\\d+)/i);\n            if (!chapterMatch) return;\n            const chapterNum = parseInt(chapterMatch[1]);\n            if (chapterNum < 1 || chapterNum > 22) return;\n            // If we already have this chapter number, merge them\n            if (chapterMap.has(chapterNum)) {\n                const existing = chapterMap.get(chapterNum);\n                // Use the longer title and merge the page ranges\n                if (ch.title.length > existing.title.length) {\n                    existing.title = ch.title;\n                }\n                existing.endPage = Math.max(existing.endPage, ch.endPage);\n            } else {\n                chapterMap.set(chapterNum, {\n                    ...ch,\n                    id: chapterNum\n                });\n            }\n        });\n        if (chapterMap.size > 0) {\n            console.log(`Filtered to ${chapterMap.size} main chapters (1-22)`);\n            chapters = Array.from(chapterMap.values()).sort((a, b)=>a.id - b.id);\n            // Refine chapter boundaries to exclude appendix content\n            for(let i = 0; i < chapters.length; i++){\n                const current = chapters[i];\n                const next = chapters[i + 1];\n                // If this chapter spans too many pages, it might include appendix content\n                if (current.endPage - current.startPage > 100) {\n                    // Look for the next chapter start to get a better boundary\n                    if (next) {\n                        current.endPage = next.startPage - 1;\n                    } else {\n                        // For the last chapter, limit it to a reasonable size\n                        current.endPage = Math.min(current.endPage, current.startPage + 50);\n                    }\n                }\n            }\n        }\n    }\n    return chapters;\n}\nasync function extractTextForRange(bookFileName, startPage, endPage) {\n    console.log(`Extracting text from ${bookFileName} pages ${startPage}-${endPage}`);\n    const filePath = node_path__WEBPACK_IMPORTED_MODULE_0___default().resolve(PDF_DIR, bookFileName);\n    console.log(`Full path: ${filePath}`);\n    try {\n        // Check if file exists\n        await node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default().access(filePath);\n        console.log(`File exists: ${filePath}`);\n    } catch (err) {\n        console.error(`File does not exist: ${filePath}`);\n        throw new Error(`PDF file not found: ${bookFileName}`);\n    }\n    console.log(`Reading file: ${filePath}`);\n    const buffer = await node_fs_promises__WEBPACK_IMPORTED_MODULE_1___default().readFile(filePath);\n    console.log(`File size: ${buffer.length} bytes`);\n    const data = new Uint8Array(buffer);\n    console.log(`Creating PDF.js document`);\n    const loadingTask = pdfjs_dist_legacy_build_pdf_mjs__WEBPACK_IMPORTED_MODULE_2__.getDocument({\n        data,\n        disableWorker: true\n    });\n    console.log(`Waiting for PDF to load`);\n    const pdf = await loadingTask.promise;\n    console.log(`PDF loaded with ${pdf.numPages} pages`);\n    const parts = [];\n    const s = Math.max(1, startPage);\n    const e = Math.min(endPage, pdf.numPages);\n    console.log(`Extracting text from pages ${s} to ${e}`);\n    for(let i = s; i <= e; i++){\n        try {\n            console.log(`Processing page ${i}/${e}`);\n            const page = await pdf.getPage(i);\n            console.log(`Getting text content for page ${i}`);\n            const tc = await page.getTextContent();\n            const items = tc.items;\n            const pageText = items.map((it)=>it.str).join(\"\\n\");\n            console.log(`Extracted ${pageText.length} characters from page ${i}`);\n            parts.push(pageText);\n        } catch (err) {\n            console.error(`Error processing page ${i}:`, err);\n            // Continue with next page\n            parts.push(`[Error extracting text from page ${i}]`);\n        }\n    }\n    console.log(`Finished extracting text from ${e - s + 1} pages`);\n    // Join parts and do basic cleanup\n    const text = parts.join(\"\\n\\n\").replace(/\\u00A0/g, \" \").replace(/[ \\t]+\\n/g, \"\\n\").replace(/\\n{3,}/g, \"\\n\\n\").trim();\n    // Apply advanced text cleaning and formatting\n    return cleanAndFormatText(text);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/pdf.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/pdfjs-dist"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute&page=%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbooks%2F%5Bbook%5D%2Fchapters%2Froute.ts&appDir=%2FUsers%2Fanthonymiller%2Fworkspaces%2Fnext_book_reader%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fanthonymiller%2Fworkspaces%2Fnext_book_reader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();